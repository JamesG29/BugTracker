@model BugTracker.Models.IssueListModel
@using BugTracker.Models
@using MySql.Data.MySqlClient
@using System.Web
@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_BaseLayout.cshtml";
}
@{
    /*
    idIssues DEFAULT(int)
    project name
    severity string
    datediscovered string  XX/XX/XXXX
    time discovered string  XX:XX:XX
    projectedmanhours float
    projectedcost float
    shortdescription string
    location string
    popularity int
    description string
    */

    //how the different categories are currently being sorted
    int dateStatus = 0;
    int severityStatus = 0;
    int costStatus = 0;
    int locationStatus = 0;

    //The value these should represent if changed, we default to 1(descending)
    int dateChange = 1;
    int severityChange = 1;
    int costChange = 1;
    int locationChange = 1;


    //a 3 implies already descending & a 4 implies already ascending, in terms of sorting
    //a 1 implies the next change will make it descending, a 2 implies next change will make it ascending
    if (Model.IsSortingDate)
    {
        if (Model.SortingDateDescending)
        {
            dateStatus = 3;
            dateChange = 2;
        }
        else
        {
            dateStatus = 4;
        }
    }

    if (Model.IsSortingSeverity)
    {
        if (Model.SortingSeverityDescending)
        {
            severityStatus = 3;
            severityChange = 2;
        }
        else
        {
            severityStatus = 4;
        }
    }

    if (Model.IsSortingCost)
    {
        if (Model.SortingCostDescending)
        {
            costStatus = 3;
            costChange = 2;
        }
        else
        {
            costStatus = 4;
        }
    }

    if (Model.IsSortingLocation)
    {
        if (Model.SortingLocationDescending)
        {
            locationStatus = 3;
            locationChange = 2;
        }
        else
        {
            locationStatus = 4;
        }
    }





}

<h2>List</h2>
@if (Model.IsEditing)
{
    @Html.Partial("Editing");
}
else
{
    if (Model.IsAdding)
    {
        @Html.Partial("Adding");
    }
    else
    {
        <div>
            <a class="btn btn-sm btn-primary" href="@Url.Action("ListAdding", "Issue", new { area = ""})">Add Issue</a>
        </div>
    }
}


<div class="container-fluid" runat="server">
    <h2>Issues</h2>

    <div class="row">
        <div class="col-sm-4 col-md-2">
            <a class="btn btn-sm btn-primary" href="@Url.Action("SortList", "Issue", new { sev = severityChange, date = dateStatus, cost = costStatus, location = locationStatus})">Severity</a>
        </div>
        <div class="col-sm-4 col-md-2">
            <a class="btn btn-sm btn-primary" href="@Url.Action("SortList", "Issue", new { sev = severityStatus, date = dateChange, cost = costStatus, location = locationStatus})">Date</a>
        </div>
        <div class="col-sm-4 col-md-1">
            <a class="btn btn-sm btn-primary" href="@Url.Action("SortList", "Issue", new { sev = severityStatus, date = dateStatus, cost = costChange, location = locationStatus})">Projected Cost</a>
        </div>
        <div class="col-sm-4 col-md-2">

        </div>
        <div class="col-sm-4 col-md-2">
            <a class="btn btn-sm btn-primary" href="@Url.Action("SortList", "Issue", new { sev = severityStatus, date = dateStatus, cost = costStatus, location = locationChange})">File Location</a>
        </div>

    </div>

    @for (int i = 0; i < @Model.Issues.Count; i++)
    {
        //html id's cannot start with a number. so DT = 'data-target', in a sense that is
        string issId = $"DT{Model.Issues[i].IssueId}";
        string Id = Model.Issues[i].IssueId;

        <div class="row">
            <div class="col-sm-4 col-md-2">
                <h3>@Model.Issues[i].Severity</h3>
            </div>
            <div class="col-sm-4 col-md-2">
                <h3>@Model.Issues[i].DateDiscovered</h3>
            </div>
            <div class="col-sm-2 col-md-1">
                <h3>$@Model.Issues[i].ProjectedCost</h3>
            </div>
            <div class="col-sm-4 col-md-2">
                <h3>@Model.Issues[i].ShortDescription</h3>
            </div>
            <div class="col-sm-4 col-md-2">
                <h3>@Model.Issues[i].Location</h3>
            </div>
            <div class="col-md-1">
                <a class="btn-sm btn-primary" href="@Url.Action("EditListItem", "Issue", new {id = Id })">Edit</a>
            </div>
            <div class="col-md-1">
                <a class="btn-sm btn-primary" href="@Url.Action("CompleteListItem", "Issue", new {id = Id })">Completed</a>
            </div>
            <div class="col-md-1">
                <button class="btn btn-primary" id="detailButton" type="button" data-toggle="collapse"
                        data-target="#@issId">
                    Details
                </button>
            </div>

        </div>
        <div id="@issId" class="row collapse">
            @Html.Partial("IssueInfo", Model.Issues[i])
        </div>
    }
</div>
<div>

</div>

@section scripts{
    <script>
        //document.body.style.backgroundColor = "red";

        const form = document.getElementById("addIssue");

        form.addEventListener("submit", function (event) {

            if (form.checkValidity() == false) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        })
    </script>
}
